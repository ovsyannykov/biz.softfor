--legal address, office, branch, department, point of sale, service-center, etc
create table locationTypes (
  id smallint not null generated by default as identity
, name varchar(63) not null
, descr varchar(255) not null
);
alter table locationTypes add constraint pk_locationTypes primary key(id);
create unique index ix_locationTypes_name on locationTypes(name asc);

--employee, CEO, head of sales department, etc
create table appointments (
  id smallint not null generated by default as identity
, name varchar(63) not null
, descr varchar(255) not null
);
alter table appointments add constraint pk_appointments primary key(id);
create unique index ix_appointments_name on appointments(name asc);

--phone, fax, email, website, skype, viber, etc
create table contactTypes (
  id smallint not null generated by default as identity
, name varchar(63) not null
, descr varchar(255) not null
);
alter table contactTypes add constraint pk_contactTypes primary key(id);
create unique index ix_contactTypes_name on contactTypes(name asc);

create table partners (
  id bigint not null generated by default as identity
, typ tinyint not null --1-person, 2-head person, 3-employee, 4-head employee, 11-organization, 12-department
, locationTypeId smallint default null
, postcodeId int default null
, parentId bigint default null --parent organization or department
, partnerName varchar(63) not null --person surname, organization short name
, partnerRegdate date default null --person birthday, organization registration date
, partnerRegcode varchar(23) default null --registration code, tax id
, address varchar(255) default null
, partnerFullname varchar(255) not null --organization full name, person firstname
);
alter table partners add constraint pk_partners primary key(id);
alter table partners add constraint fk_partners_locationTypes foreign key(locationTypeId) references locationTypes(id);
alter table partners add constraint fk_partners_parentId_partners foreign key(parentId) references partners(id);
alter table partners add constraint fk_partners_postcodes foreign key(postcodeId) references postcodes(id);
create unique index ix_partners_typ_partnerName on partners(typ asc, partnerName asc);

alter table users add constraint fk_users_partners foreign key(personId) references partners(id);

create table partnerDetails (
  id bigint not null
, note varchar(255) default null
);
alter table partnerDetails add constraint pk_partnerDetails primary key(id);
alter table partnerDetails add constraint fk_partnerDetails_partners foreign key(id) references partners(id);

create table personDetails (
  id bigint not null
, passportSeries varchar(7) not null
, passportNumber int not null
, passportDate date not null
, middlename varchar(63) not null
, passportIssued varchar(255) not null
, married tinyint default null
);
alter table personDetails add constraint pk_personDetails primary key(id);
alter table personDetails add constraint fk_personDetails_partners foreign key(id) references partners(id);
create unique index ix_personDetails_passportNumber_passportSeries on personDetails(passportNumber asc,passportSeries asc);

create table partnerFiles (
  id bigint not null generated by default as identity
, partnerId bigint not null
, descr varchar(255) default null
, uri varchar(511) default null
);
alter table partnerFiles add constraint pk_partnerFiles primary key(id);
alter table partnerFiles add constraint fk_partnerFiles_partners foreign key(partnerId) references partners(id);

create table contacts (
  id bigint not null generated by default as identity
, partnerId bigint not null
, appointmentId smallint default null
, typeId smallint not null
, isPublic tinyint not null default 0 --0-private, 1-public
, descr varchar(63) not null
);
alter table contacts add constraint pk_contacts primary key(id);
alter table contacts add constraint fk_contacts_partners foreign key(partnerId) references partners(id);
alter table contacts add constraint fk_contacts_appointments foreign key(appointmentId) references appointments(id);
alter table contacts add constraint fk_contacts_contactTypes foreign key(typeId) references contactTypes(id);

create table contactDetails (
  id bigint not null
, note varchar(255) default null
);
alter table contactDetails add constraint pk_contactDetails primary key(id);
alter table contactDetails add constraint fk_contactDetails_contacts foreign key(id) references contacts(id);
